[{"D:\\DailyPractice\\ReactJS\\src\\index.js":"1","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\App.js":"2","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Header.js":"3","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Search.js":"4","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Movie.js":"5","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Body.js":"6"},{"size":209,"mtime":1611082143876,"results":"7","hashOfConfig":"8"},{"size":261,"mtime":1611223051712,"results":"9","hashOfConfig":"8"},{"size":490,"mtime":1611316393783,"results":"10","hashOfConfig":"8"},{"size":1392,"mtime":1611316635802,"results":"11","hashOfConfig":"8"},{"size":1289,"mtime":1611315829281,"results":"12","hashOfConfig":"8"},{"size":247,"mtime":1611316857539,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tuwt8m",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DailyPractice\\ReactJS\\src\\index.js",[],["28","29"],"D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\App.js",[],"D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Header.js",[],"D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Search.js",["30","31"],"import React, { useState } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Search() {\r\n  let [input, setInput] = useState(\"\");\r\n  let [data, setData] = useState([]);\r\n  let [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  let apiURL = `https://api.themoviedb.org/3/search/movie?api_key=20b3557e9e2b3e74919ce30cdada1468&language=en-US&query=${input}`;\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(apiURL).then((response) => {\r\n      response.json().then((value) => {\r\n        setData(value.results);\r\n      });\r\n    });\r\n    setInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"section\">\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"field\"\r\n              placeholder=\"Enter movie name...\"\r\n              name=\"movie\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            ></input>\r\n            <i className=\"fas fa-search search-icon\"></i>\r\n          </div>\r\n          <button>Search</button>\r\n        </form>\r\n      </section>\r\n\r\n      {data.length === 0 ? (\r\n        <Body />\r\n      ) : (\r\n        data.map((item, index) => {\r\n          return <Movie key={index} renderedData={item} />;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Movie.js",[],"D:\\DailyPractice\\ReactJS\\src\\MovieSearch\\Components\\Body.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":20},{"ruleId":"36","severity":1,"message":"40","line":8,"column":22,"nodeType":"38","messageId":"39","endLine":8,"endColumn":37},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","'setErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]